name: Build and test iOS App

on:
  workflow_dispatch:

jobs:
  build-ios-app:
    runs-on: macos-12
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16.10.0

      - name: install
        run: npm install

      - name: Install apple simulator
        run: |
          brew tap wix/brew
          brew install applesimutils

      - name: Setup ruby
        uses: ruby/setup-ruby-pkgs@v1
        with:
          ruby-version: '2.7.5'
          bundler-cache: true

      - name: Get device UDID
        description: 'Fetch the device UDID'
        id: deviceId
        run: |
          device=$(applesimutils --list --byType "iPhone 13")
          echo device_json=$device >> $GITHUB_OUTPUT

      - name: Boot up sim
        description: 'Initializes simulator and waits for boot to complete'
        run: |
          deviceUDID=${{ fromJSON(steps.deviceId.outputs.device_json)[0].udid }}
          /usr/bin/xcrun simctl boot $deviceUDID
          /usr/bin/xcrun simctl bootstatus $deviceUDID

      - name: Cache pods
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}

      - name: Setup Cocoapods
        run: npm run setup

      - name: Get bundle version
        id: version
        run: echo "IOS_VERSION=$(/usr/libexec/PlistBuddy -c "print :CFBundleVersion" ./ios/YourAwesomeProject/Info.plist)" >> $GITHUB_OUTPUT

      - name: Cache Native Build
        id: cached-native-build
        uses: actions/cache@v3
        with:
          path: ios/build/Build/Products/Release-iphonesimulator
          key: ios-bundle-${hashFiles('yarn.lock')-${hashFiles('Podfile.lock')}}

      - name: Generate iOS Simulator build
        if: steps.cached-native-build.outputs.cache-hit != 'true'
        run: npx detox build --configuration ios.sim.release

      - name: Swap JS Bundle and assets
        run: |
          if [[ -f ios/build/Build/Products/Release-iphonesimulator/YourAwesomeProject.app/main.jsbundle ]]; then
            echo "js build unnecessary"
          else
            mkdir dist
            npx react-native bundle --platform ios --dev false --entry-file index.js --reset-cache --minify false --bundle-output dist/main.precompiled.jsbundle --assets-dest dist/assets
            ios/Pods/hermes-engine/destroot/bin/hermesc -O -emit-binary -output-source-map -out=dist/main.jsbundle dist/main.precompiled.jsbundle
            mv dist/main.jsbundle ios/build/Build/Products/Release-iphonesimulator/YourAwesomeProject.app/main.jsbundle
            mv dist/assets ios/build/Build/Products/Release-iphonesimulator/YourAwesomeProject.app/assets
          fi

      - name: run test
        run: npx detox test --configuration ios.sim.release --loglevel trace --record-logs all

      - uses: actions/upload-artifact@v3
        with:
          name: debug-artifact
          path: ${{ github.workspace }}/artifacts/**/*

      - name: Cleanup JS Bundle
        working-directory: ios/build/Build/Products/Release-iphonesimulator/YourAwesomeProject.app
        if: steps.cached-native-build.outputs.cache-hit != 'true'
        run: rm -rf main.jsbundle assets
